apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.marvel.jr.supers"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "io.appflate.restmock.android.RESTMockTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

kapt {
    generateStubs = true
}

ext.versions = [
        "support_lib"               : "27.1.1"          ,
        "constraint_layout"         : "1.1.0"           ,
        "junit"                     : "4.12"            ,
        "mockito"                   : "2.10.0"          ,
        "restmock"                  : "0.3.1"           ,
        "espresso"                  : "3.0.1"           ,
        "espresso_contrib"          : "2.2.1"           ,
        "test_runner"               : "1.0.1"           ,
        "okhttp3_idling_resource"   : "1.0.0"           ,
        "mockwebserver"             : "3.10.0"          ,
        "dagger"                    : "2.11"            ,
        "daggermock"                : "0.8.4"           ,
        "retrofit"                  : "2.3.0"           ,
        "okhttp"                    : "3.10.0"          ,
        "gson"                      : "2.8.0"           ,
        "retrofit_converter_gson"   : "2.3.0"           ,
        "room"                      : "1.1.0-beta2"     ,
        "picasso"                   : "2.71828"         ,
]

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation "com.android.support:appcompat-v7:${versions.support_lib}"
    implementation "com.android.support:cardview-v7:${versions.support_lib}"

    implementation "com.android.support.constraint:constraint-layout:${versions.constraint_layout}"

    implementation "com.android.support:design:${versions.support_lib}"

    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "com.android.support.test:runner:${versions.test_runner}"

    //espresso
    implementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${versions.espresso_contrib}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${versions.espresso}"
    implementation "com.android.support.test.espresso.idling:idling-concurrent:${versions.espresso}"

    //okhttp idling resource
    implementation "com.jakewharton.espresso:okhttp3-idling-resource:${versions.okhttp3_idling_resource}"

    //restmock
    androidTestImplementation "com.github.andrzejchm.RESTMock:android:${versions.restmock}"

    //dagger2
    implementation "com.google.dagger:dagger:${versions.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    //daggermock
    androidTestImplementation "com.github.fabioCollini.daggermock:daggermock:${versions.daggermock}"

    //retrofit2
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"

    //gson
    implementation "com.google.code.gson:gson:${versions.gson}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit_converter_gson}"

    //room
    implementation "android.arch.persistence.room:runtime:${versions.room}"
    annotationProcessor "android.arch.persistence.room:compiler:${versions.room}"
    kapt "android.arch.persistence.room:compiler:${versions.room}"

    //picasso
    implementation "com.squareup.picasso:picasso:${versions.picasso}"

    //mockito
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    androidTestImplementation "org.mockito:mockito-android:${versions.mockito}"
}
